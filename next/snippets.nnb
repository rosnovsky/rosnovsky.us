{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "`getStaticProps` in Next.js with tRPC"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "npm install --save-dev @nrwl/workspace"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.error",
                            "value": {
                                "name": "Error",
                                "message": "Failed to generate code object, \nundefined\n ^\n\nUnterminated regular expression",
                                "stack": ""
                            }
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "// import SSG helpers, appRouter, and superjson\nimport { createSSGHelpers } from \"@trpc/react/ssg\";\nimport { appRouter } from \"../server/router\";\nimport { InferGetStaticPropsType } from \"next\";\nimport Head from \"next/head\";\nimport superjson from \"superjson\";\n\n// page component goes here\nconst Home = (props: InferGetStaticPropsType<typeof getStaticProps>) => {\n  const { uniquesThisMonth } = props;\n\n  return (\n    <>\n      <Head>\n        <title>Create T3 App</title>\n        <meta name=\"description\" content=\"Generated by create-t3-app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>{uniquesThisMonth?.uniques}</main>\n    </>\n  );\n};\n\nexport default Home;\n\nexport async function getStaticProps() {\n  const ssg = await createSSGHelpers({\n    router: appRouter,\n    ctx: {},\n    transformer: superjson, // optional - adds superjson serialization\n  });\n  // prefetch `post.byId`\n  const uniquesThisMonth = await ssg.fetchQuery(\"stats.getUniqueVisitors\");\n\n  return {\n    props: {\n      trpcState: ssg.dehydrate(),\n      uniquesThisMonth,\n    },\n    revalidate: 400,\n  };\n}\n"
            ],
            "outputs": []
        }
    ]
}